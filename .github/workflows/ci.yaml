# name: CI/CD Pipeline

# on:
#   push:
#     branches:
#       - cli_to_RDS
#   pull_request:
#     branches:
#       - cli_to_RDS

# jobs:
#   validate:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: "16.x"  # Use a valid Node.js version

#       - name: Set up Python
#         uses: actions/setup-python@v2
#         with:
#           python-version: "3.10"

#       - name: Install python-dotenv
#         run: pip install python-dotenv

#       - name: Setup .env file
#         run: |
#           echo "GITHUB_TOKEN=${{ secrets.API_TOKEN }}" >> .env
#           echo "LOG_LEVEL=info" >> .env
#           echo "LOG_FILE=/tmp/checker.log" >> .env
#           echo "S3_PERMANENT_BUCKET_NAME=${{ secrets.S3_PERMANENT_BUCKET_NAME }}" >> .env
#           echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> .env
#           echo "IAM_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env
#           echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env
#           echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
#           echo "DB_USER=${{ secrets.DB_USER }}" >> .env
#           echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
#           echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
#           echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
#           echo "DB_SSL_CA=${{ secrets.DB_SSL_CA }}" >> .env


#       - name: Make 'run' script executable
#         run: chmod +x run

#       - name: Install Node.js dependencies
#         run: ./run install

#       - name: Build the project
#         run: ./run build

#       - name: Run checker script
#         run: python3 checker/checker.py

#       - name: Display run.log on failure
#         if: failure()
#         run: cat logs/run.log
name: CI/CD Pipeline

on:
  push:
    branches:
      - cli_to_RDS
      - 21-testing-code-coverage-and-integration
  pull_request:
    branches:
      - cli_to_RDS

jobs:
  validate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install python-dotenv
        run: pip install python-dotenv

      - name: Setup .env file and Install Dependencies
        run: |
          echo "GITHUB_TOKEN=${{ secrets.API_TOKEN }}" >> .env
          echo "LOG_LEVEL=info" >> .env
          echo "LOG_FILE=/tmp/checker.log" >> .env
          echo "S3_PERMANENT_BUCKET_NAME=${{ secrets.S3_PERMANENT_BUCKET_NAME }}" >> .env
          echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> .env
          echo "IAM_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_SSL_CA=${{ secrets.DB_SSL_CA }}" >> .env

      - name: Make 'run' script executable
        run: chmod +x run

      - name: Install Node.js dependencies
        run: npm install --include=dev

      - name: Verify TypeScript Installation
        run: npx tsc --version

      - name: Build the project
        run: ./run build

      - name: List directory contents
        run: ls -la dist

      - name: Run checker script
        run: python3 checker/checker.py

      - name: Display run.log on failure
        if: failure()
        run: cat logs/run.log